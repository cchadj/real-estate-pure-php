<?php

namespace App\Model;

use App\Helper\DB;
use PDO;

require_once __ROOT__ . "/App/database.php";

/**
 * @method static PropertyType Create(array $record, DB $db = null)
 * @method static PropertyType Find(int $id, DB $db = null)
 * @method static PropertyType FindBy(string $column, string $value, int $pdoParamType = PDO::PARAM_STR, ?DB $db = null)
 */
class PropertyType extends Model
{
    public int $id;
    public string $name;

    protected static function getTable(): string
    {
        return "property_types";
    }

    protected static function getColumnToPdoParamType(): array
    {
        return parent::getColumnToPdoParamType(); // TODO: Change the autogenerated stub
    }

    protected static function fromRecord(array $record): Model
    {
        return new PropertyType(...$record);
    }

    public function __construct(int $id, string $name, string $created_at, string $updated_at)
    {
        parent::__construct($created_at, $updated_at);
        $this->id = $id;
        $this->name = $name;
    }

    /**
     * @return PropertyType[]
     */
    public static function GetAll(DB | null $db = null): array
    {
        $propertyTypesAssoc = self::AllAssoc($db);
        return array_map(
            fn(array $t): PropertyType => new PropertyType($t["id"], $t["name"]),
            $propertyTypesAssoc);
    }
}